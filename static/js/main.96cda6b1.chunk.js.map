{"version":3,"sources":["backspace.svg","components/Button.js","components/Input.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Button","orangify","val","orangeBg","operator","isNaN","_this2","this","react_default","a","createElement","className","concat","props","children","onClick","handleClick","Component","Input","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addToInput","state","pressed","clearAll","setState","input","addZero","addDecimal","indexOf","curr","prev","clearOne","substr","length","add","parseFloat","changeOperators","sub","mul","div","evaluate","percentage","src_components_Input","src_components_Button","src","backspace","alt","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.96cda6b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/backspace.8a27725b.svg\";","import React, { Component } from 'react';\r\nimport './Button.css';\r\n\r\nclass Button extends Component {\r\n  orangify = val => {\r\n\t\treturn val === \"AC\";\r\n\t}\r\n\t\t\r\n\torangeBg = val => {\r\n\t\treturn val === \"=\";\r\n\t}\r\n\r\n\toperator = val => {\r\n\t\treturn !isNaN(val) || val === \"AC\" || val === \".\" || val === \"=\";\r\n\t}\r\n\r\n  render() {\r\n    return (\r\n      <div className={`button ${this.orangify(this.props.children) ? \"orange-font\" : \"\"} ${this.orangeBg(this.props.children) ? \"orange-bg\" : \"\"} ${this.operator(this.props.children) ? \"\" : \"operator\"}`}\r\n\t\t\tonClick={()=> this.props.handleClick(this.props.children)}>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\nimport './Input.css';\r\n\r\nclass Input extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"input\">\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Button from './components/Button';\nimport Input from './components/Input';\nimport backspace from './backspace.svg';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      input: \"\",\n      curr: \"\",\n      prev: \"\",\n      operator: \"\",\n      pressed: false\n    }\n  }\n\n  addToInput = val => {\n    // Appends a number to the input\n    if (this.state.pressed === true){\n      // Resets the calculator after completing a calculation\n      this.clearAll();\n      this.setState({\n        input: val\n      })\n    } else {\n      this.setState({\n        input: this.state.input + val\n      })\n    }\n  }\n\n  addZero = val => {\n    // Appends the number 0 to input if 0 is not the first number\n    if (this.state.input !== \"\") {\n    this.setState({input: this.state.input + val})\n    }\n  }\n\n  addDecimal = val => {\n    // Sets decimal point if decimal point has not been set\n    if (this.state.input.indexOf(\".\") === -1) {\n      this.setState({input: this.state.input + val})\n      }\n  }\n\n  clearAll = () => {\n    // Clears all states\n    this.setState({\n      input: \"\",\n      curr: \"\",\n      prev: \"\",\n      operator: \"\",\n      pressed: false\n    })\n  }\n\n  clearOne = () => {\n    // Clear the last number from input\n    if (this.state.pressed !== true) {\n      this.setState({\n        input: this.state.input.substr(0, this.state.input.length - 1)\n      })\n    }\n  }\n\n  add = () => {\n    // Addition operator\n    if (this.state.operator === \"\" && this.state.prev === \"\") {\n      // Prints prev number if no number exists\n      this.setState({\n        prev: this.state.input,\n        input: \"\",\n        operator: \"+\"\n      });\n    } \n    else if (this.state.curr === \"\" && this.state.operator === \"+\"){\n      // Adds number to prev if user presses '+' instead of '='\n      this.setState({\n        prev : (parseFloat(this.state.prev) + parseFloat (this.state.input)),\n        input: \"\",\n        operator: \"+\"\n      })\n    } \n    else if (this.state.operator !== \"+\" && this.state.curr === \"\" && this.state.input !== \"\"){\n      // Calls the changeOperators function to complete the outstanding equation before changing to a new operator\n      this.changeOperators();\n      this.setState({\n        operator: \"+\",\n        input: \"\"\n      })\n    } \n    else if (this.state.operator !== \"+\" && this.state.curr === \"\"){\n      // Changes operator to '+' if it is not already\n      this.setState({\n        operator: \"+\"\n      })\n    } \n    else {\n      // Adds number to prev and resets the input and curr if the user used '=' previously\n      this.setState({\n        prev : this.state.input,\n        curr: \"\",\n        input: \"\",\n        operator: \"+\",\n        pressed: false\n      })\n    }\n  }\n\n  sub = () => {\n    // Subtraction operator\n    if (this.state.operator === \"\" && this.state.prev === \"\") {\n      // Prints prev number if no number exists\n      this.setState({\n        prev: this.state.input,\n        input: \"\",\n        operator: \"-\"\n      });\n    } \n    else if (this.state.curr === \"\" && this.state.operator === \"-\"){\n      // Subtracts number to prev if user presses '-' instead of '='\n      this.setState({\n        prev : (parseFloat(this.state.prev) - parseFloat (this.state.input)),\n        input: \"\",\n        operator: \"-\"\n      })\n    } \n    else if (this.state.operator !== \"-\" && this.state.curr === \"\" && this.state.input !== \"\"){\n      // Calls the changeOperators function to complete the outstanding equation before changing to a new operator\n      this.changeOperators();\n      this.setState({\n        operator: \"-\",\n        input: \"\"\n      })\n    } \n    else if (this.state.operator !== \"-\" && this.state.curr === \"\"){\n      // Changes operator to '-' if it is not already\n      this.setState({\n        operator: \"-\"\n      })\n    } \n    else {\n      // Subtracts number to prev and resets the input and curr if the user used '=' previously\n      this.setState({\n        prev : this.state.input,\n        curr: \"\",\n        input: \"\",\n        operator: \"-\",\n        pressed: false\n      })\n    }\n  }\n\n  mul = () => {\n    // Multiplication operator\n    if (this.state.operator === \"\" && this.state.prev === \"\") {\n      // Prints prev number if no number exists\n      this.setState({\n        prev: this.state.input,\n        input: \"\",\n        operator: \"*\"\n      });\n    } \n    else if (this.state.curr === \"\" && this.state.operator === \"*\"){\n      // Multiplies number to prev if user presses '*' instead of '='\n      this.setState({\n        prev : (parseFloat(this.state.prev) * parseFloat (this.state.input)),\n        input: \"\",\n        operator: \"*\"\n      })\n    } \n    else if (this.state.operator !== \"*\" && this.state.curr === \"\" && this.state.input !== \"\"){\n      // Calls the changeOperators function to complete the outstanding equation before changing to a new operator\n      this.changeOperators();\n      this.setState({\n        operator: \"*\",\n        input: \"\"\n      })\n    } \n    else if (this.state.operator !== \"*\" && this.state.curr === \"\"){\n      // Changes operator to '*' if it is not already\n      this.setState({\n        operator: \"*\"\n      })\n    } \n    else {\n      // Multiplies number to prev and resets the input and curr if the user used '=' previously\n      this.setState({\n        prev : this.state.input,\n        curr: \"\",\n        input: \"\",\n        operator: \"*\",\n        pressed: false\n      })\n    }\n  }\n\n  div = () => {\n    // Division operator\n    if (this.state.operator === \"\" && this.state.prev === \"\") {\n      // Prints prev number if no number exists\n      this.setState({\n        prev: this.state.input,\n        input: \"\",\n        operator: \"/\"\n      });\n    } \n    else if (this.state.curr === \"\" && this.state.operator === \"/\"){\n      // Divides number to prev if user presses '/' instead of '='\n      this.setState({\n        prev : (parseFloat(this.state.prev) / parseFloat (this.state.input)),\n        input: \"\",\n        operator: \"/\"\n      })\n    } \n    else if (this.state.operator !== \"/\" && this.state.curr === \"\" && this.state.input !== \"\"){\n      // Calls the changeOperators function to complete the outstanding equation before changing to a new operator\n      this.changeOperators();\n      this.setState({\n        operator: \"/\",\n        input: \"\"\n      })\n    } \n    else if (this.state.operator !== \"/\" && this.state.curr === \"\"){\n      // Changes operator to '/' if it is not already\n      this.setState({\n        operator: \"/\"\n      })\n    } \n    else {\n      // Divides number to prev and resets the input and curr if the user used '=' previously\n      this.setState({\n        prev : this.state.input,\n        curr: \"\",\n        input: \"\",\n        operator: \"/\",\n        pressed: false\n      })\n    }\n  }\n\n  // Function that finishes evaluating the previous calculation before moving on to change into another operator\n  changeOperators = () => {\n    if (this.state.operator === \"+\") {\n      this.setState({\n        prev : (parseFloat(this.state.prev) + parseFloat (this.state.input))\n      })\n    } else if (this.state.operator === \"-\") {\n      this.setState({\n        prev : (parseFloat(this.state.prev) - parseFloat (this.state.input))\n      })\n    } else if (this.state.operator === \"/\") {\n      this.setState({\n        prev : (parseFloat(this.state.prev) / parseFloat (this.state.input))\n      })\n    } else if (this.state.operator === \"*\") {\n      this.setState({\n        prev : (parseFloat(this.state.prev) * parseFloat (this.state.input))\n      })\n    }\n  }\n\n  // Evaluate the equation according to operators used\n  evaluate = () => {\n    // Change pressed boolean to reset calculator after calculation\n    this.setState({curr: this.state.input, pressed: true}, ()=> {\n\n      if (this.state.operator === \"+\" && this.state.curr !== \"\") {\n        this.setState({\n          input : (parseFloat(this.state.prev) + parseFloat (this.state.curr))\n        })\n      } else if (this.state.operator === \"-\" && this.state.curr !== \"\") {\n        this.setState({\n          input : (parseFloat(this.state.prev) - parseFloat (this.state.curr))\n        })\n      } else if (this.state.operator === \"/\" && this.state.curr !== \"\") {\n        this.setState({\n          input : (parseFloat(this.state.prev) / parseFloat (this.state.curr))\n        })\n      } else if (this.state.operator === \"*\" && this.state.curr !== \"\") {\n        this.setState({\n          input : (parseFloat(this.state.prev) * parseFloat (this.state.curr))\n        })\n      } else {\n        // Do nothing if curr value is blank (reset the pressed boolean to false)\n        this.setState({\n          pressed: false\n        })\n      }\n    })\n  }\n\n  percentage = () => {\n    // Evaluate the equation in percentage\n    this.setState({curr: this.state.input}, ()=> {\n      if (this.state.operator === \"+\") {\n        this.setState({\n          input : (parseFloat(this.state.prev) + parseFloat(this.state.prev*(this.state.curr/100)))\n        })\n      } else if (this.state.operator === \"-\") {\n        this.setState({\n          input : (parseFloat(this.state.prev) - parseFloat(this.state.prev*(this.state.curr/100)))\n        })\n      } else if (this.state.operator === \"/\") {\n        this.setState({\n          input : (parseFloat(this.state.prev) / parseFloat(this.state.curr/100))\n        })\n      } else if (this.state.operator === \"*\") {\n        this.setState({\n          input : (parseFloat(this.state.prev) * parseFloat(this.state.curr/100))\n        })\n      } else {\n        return;\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"calc-wrapper\">\n          <div className=\"row\">\n            <Input>\n              <div>{this.state.prev}{this.state.operator}{this.state.curr}</div>\n              <div>{this.state.input}</div>\n            </Input>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.clearAll}>AC</Button>\n            <Button handleClick={() => this.clearOne()}><img src={backspace} className='backspace-icon' alt=\"icon\"/></Button>\n            <Button handleClick={() => this.percentage()}>%</Button>\n            <Button handleClick={this.div}>/</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>7</Button>\n            <Button handleClick={this.addToInput}>8</Button>\n            <Button handleClick={this.addToInput}>9</Button>\n            <Button handleClick={this.mul}>*</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>4</Button>\n            <Button handleClick={this.addToInput}>5</Button>\n            <Button handleClick={this.addToInput}>6</Button>\n            <Button handleClick={this.sub}>-</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>1</Button>\n            <Button handleClick={this.addToInput}>2</Button>\n            <Button handleClick={this.addToInput}>3</Button>\n            <Button handleClick={this.add}>+</Button>\n          </div>\n          <div className=\"row\">\n            <Button></Button>\n            <Button handleClick={this.addZero}>0</Button>\n            <Button handleClick={this.addDecimal}>.</Button>\n            <Button handleClick={() => this.evaluate()}>=</Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}